name: Create release

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  prepare-tag:
    name: Obtain tag name
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'new-release')
    outputs:
      tag-name: ${{ steps.prepare-tag.outputs.tag-name }}
    steps:
      - name: Obtain tag name
        id: prepare-tag
        run: |
          branch_name="${{ github.event.pull_request.head.ref }}"
          tag_name=$(echo $branch_name | sed 's/version\///')
          echo "tag-name=$tag_name" >> $GITHUB_OUTPUT

  create-tag:
    name: Create new tag
    needs: prepare-tag
    runs-on: ubuntu-latest
    if: needs.prepare-tag.outputs.tag-name != ''
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3

      - name: Create tag name
        run: |
          git tag "${{ needs.prepare-tag.outputs.tag-name }}"

      - name: Push tag to origin
        run: git push origin "${{ needs.prepare-tag.outputs.tag-name }}"

  create-release:
    name: Create new release
    needs: [prepare-tag, create-tag]
    runs-on: ubuntu-latest
    if: needs.prepare-tag.outputs.tag-name != ''
    permissions:
      contents: write
    steps:
      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          tag: "${{ needs.prepare-tag.outputs.tag-name }}"
          prerelease: ${{ contains(needs.prepare-tag.outputs.tag-name, '-') }}
          generateReleaseNotes: true
          allowUpdates: true

  publish-package:
    name: Publish package
    runs-on: ubuntu-latest
    needs: create-release

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3

        with:
          registry-url: https://registry.npmjs.org/

      - name: Get version
        run: |
          echo "NPM_VERSION=${GITHUB_REF##*/v}" >> $GITHUB_ENV

      - name: Publish package

        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

        run: |
          npm publish --access public --provenance --tag "$(if [[ $NPM_VERSION == *-* ]]; then echo beta; else echo latest; fi)"
